import React, { useEffect, useState } from 'react';
import axios from 'axios';

const DanhSachSVDangKy = () => {
  const [dsDangKy, setDsDangKy] = useState([]);
  const [banDauList, setBanDauList] = useState([]);
  const [ketThucList, setKetThucList] = useState([]);
  const [searchText, setSearchText] = useState('');
  const [filterHoSoOption, setFilterHoSoOption] = useState('all'); // all | daNop | chuaNop

  useEffect(() => {
    // d·ªØ li·ªáu sinh vi√™n ch∆∞a x√°c nh·∫≠n
    axios.get('http://118.69.126.49:5225/api/ChiTietThucTap/get-all')
      .then(res => {
        const filtered = res.data.filter(sv => !sv.tenTinhTrang || sv.tenTinhTrang === '');
        setDsDangKy(filtered);
      })
      .catch(err => console.error('L·ªói khi t·∫£i dsSinhVien:', err));

    // h·ªì s∆° ban ƒë·∫ßu
    axios.get('http://118.69.126.49:5225/api/ChiTietHoSoThucTapBanDau/get-all-ho-so-ban-dau')
      .then(res => setBanDauList(res.data))
      .catch(err => console.error('L·ªói khi t·∫£i h·ªì s∆° ban ƒë·∫ßu:', err));

    // h·ªì s∆° k·∫øt th√∫c
    axios.get('http://118.69.126.49:5225/api/ChiTietHoSoThucTapKetThuc/get-all-ho-so-ket-thuc')
      .then(res => setKetThucList(res.data))
      .catch(err => console.error('L·ªói khi t·∫£i h·ªì s∆° k·∫øt th√∫c:', err));
  }, []);

  const isHoSoHopLe = link => link && link.trim() !== '' && link !== '\u0000';

  const getDownloadLinkFromDrive = link => {
    const match = link?.match(/[-\w]{25,}/);
    return match ? `https://drive.google.com/uc?export=download&id=${match[0]}` : null;
  };

  const hienThiHoSo = link => {
    if (!isHoSoHopLe(link)) return '‚ùå Ch∆∞a n·ªôp';
    const dl = getDownloadLinkFromDrive(link);
    return dl
      ? <a href={dl} download target="_blank" rel="noopener noreferrer">üì• T·∫£i h·ªì s∆°</a>
      : '‚ùå Link kh√¥ng h·ª£p l·ªá';
  };

  // build payload d√πng chung
  const buildUpdatePayload = (sv, options = {}) => ({
    mssv: sv.mssv,
    maDotThucTap: sv.maDotThucTap,
    ngayBatDau: sv.ngayBatDau,
    ngayKetThuc: sv.ngayKetThuc,
    lanThucTap: sv.lanThucTap,
    maDonViThucTap: sv.maDonViThucTap,
    maGiaoVien: sv.maGiaoVien,
    hoSoThucTap: sv.hoSoThucTap,
    hoSoDaNop: sv.hoSoDaNop,
    xacNhanChoBaoCao: sv.xacNhanChoBaoCao,
    ketQuaBaoCao: sv.ketQuaBaoCao,
    diemBaoCao: sv.diemBaoCao,
    maTinhTrangThucTap: options.maTinhTrangThucTap ?? sv.maTinhTrangThucTap,
    tinhTrangXacNhan: options.tinhTrangXacNhan ?? sv.tinhTrangXacNhan,
    ghiChu: options.ghiChu ?? sv.ghiChu,
  });

  const handleXacNhan = sv => {
    const payload = buildUpdatePayload(sv, {
      maTinhTrangThucTap: 2,
      tinhTrangXacNhan: 'ƒê√£ x√°c nh·∫≠n',
      ghiChu: 'ƒê√£ x√°c nh·∫≠n b·ªüi admin'
    });
    axios.post('http://118.69.126.49:5225/api/ChiTietThucTap/insert-update', payload)
      .then(() => {
        alert(`‚úÖ ƒê√£ x√°c nh·∫≠n MSSV: ${sv.mssv}`);
        setDsDangKy(prev =>
          prev.map(item =>
            item.mssv === sv.mssv && item.maDotThucTap === sv.maDotThucTap
              ? { ...item, ...payload }
              : item
          )
        );
      })
      .catch(err => { console.error('‚ùå L·ªói x√°c nh·∫≠n:', err); alert('X√°c nh·∫≠n th·∫•t b·∫°i'); });
  };

  const handleXacNhanAll = () => {
    filteredList.forEach(handleXacNhan);
  };

  const handleDownloadAll = () => {
    filteredList.forEach(sv => {
      // t·∫£i c·∫£ ban ƒë·∫ßu v√† k·∫øt th√∫c
      [ 
        banDauList.find(b => b.mssv === sv.mssv && b.maDotThucTap === sv.maDotThucTap)?.hoSoThucTapBanDau,
        ketThucList.find(k => k.mssv === sv.mssv && k.maDotThucTap === sv.maDotThucTap)?.hoSoThucTapKetThuc
      ].forEach(link => {
        const dl = getDownloadLinkFromDrive(link);
        if (dl) {
          const a = document.createElement('a');
          a.href = dl;
          a.download = `${sv.mssv}_hosothuctap.pdf`;
          document.body.appendChild(a); a.click(); document.body.removeChild(a);
        }
      });
    });
  };

  const handleGuiYeuCauNop = sv => {
    const payload = buildUpdatePayload(sv, { ghiChu: 'Vui l√≤ng n·ªôp H·ªì S∆° Th·ª±c T·∫≠p' });
    axios.post('http://118.69.126.49:5225/api/ChiTietThucTap/insert-update', payload)
      .then(() => {
        alert(`üì® ƒê√£ g·ª≠i y√™u c·∫ßu MSSV: ${sv.mssv}`);
        setDsDangKy(prev =>
          prev.map(item =>
            item.mssv === sv.mssv && item.maDotThucTap === sv.maDotThucTap
              ? { ...item, ghiChu: payload.ghiChu }
              : item
          )
        );
      })
      .catch(err => { console.error('L·ªói g·ª≠i y√™u c·∫ßu:', err); alert('G·ª≠i y√™u c·∫ßu th·∫•t b·∫°i'); });
  };

  const handleGuiYeuCauAll = () => {
    filteredList
      .filter(sv => !isHoSoHopLe(sv.hoSoThucTap))
      .forEach(handleGuiYeuCauNop);
  };

  const filteredList = dsDangKy.filter(sv => {
    const hoTen = `${sv.hoSinhVien} ${sv.tenSinhVien}`.toLowerCase();
    const matchSearch =
      sv.mssv.toLowerCase().includes(searchText.toLowerCase()) ||
      hoTen.includes(searchText.toLowerCase()) ||
      sv.tenDotThucTap.toLowerCase().includes(searchText.toLowerCase());
    const hoSoValid = isHoSoHopLe(sv.hoSoThucTap);
    const matchHoSo =
      filterHoSoOption === 'all' ||
      (filterHoSoOption === 'daNop' && hoSoValid) ||
      (filterHoSoOption === 'chuaNop' && !hoSoValid);
    return matchSearch && matchHoSo;
  });

  return (
    <div style={{ padding: '20px' }}>
      <h2>DANH S√ÅCH SINH VI√äN CH∆ØA X√ÅC NH·∫¨N</h2>

      <div style={{ marginBottom: '15px' }}>
        <input
          type="text"
          placeholder="üîç T√¨m MSSV, h·ªç t√™n, ƒë·ª£t..."
          value={searchText}
          onChange={e => setSearchText(e.target.value)}
          style={{ padding: '6px', width: '250px', marginRight: '10px' }}
        />
        <select
          value={filterHoSoOption}
          onChange={e => setFilterHoSoOption(e.target.value)}
          style={{ padding: '6px', marginRight: '10px' }}
        >
          <option value="all">üìÇ T·∫•t c·∫£ h·ªì s∆°</option>
          <option value="daNop">üì• ƒê√£ n·ªôp</option>
          <option value="chuaNop">‚ùå Ch∆∞a n·ªôp</option>
        </select>
        <button onClick={handleXacNhanAll}>‚úÖ X√°c nh·∫≠n to√†n b·ªô</button>
        <button onClick={handleDownloadAll} style={{ marginLeft: 10 }}>üì• T·∫£i to√†n b·ªô h·ªì s∆°</button>
        <button onClick={handleGuiYeuCauAll} style={{ marginLeft: 10 }}>üì® G·ª≠i y√™u c·∫ßu n·ªôp</button>
      </div>

      <div style={{ marginBottom: '10px' }}>
        <strong>T·ªïng s·ªë SV:</strong> {filteredList.length}
      </div>

      <table border="1" cellPadding="8" cellSpacing="0" style={{ width: '100%', borderCollapse: 'collapse' }}>
        <thead style={{ backgroundColor: '#f0f0f0' }}>
          <tr>
            <th>MSSV</th>
            <th>H·ªç t√™n</th>
            <th>ƒê·ª£t th·ª±c t·∫≠p</th>
            <th>Th·ªùi gian</th>
            <th>L·∫ßn</th>
            <th>ƒê∆°n v·ªã</th>
            <th>Gi·∫£ng vi√™n</th>
            <th>H·ªì s∆° ban ƒë·∫ßu</th>
            <th>H·ªì s∆° k·∫øt th√∫c</th>
            <th>T√¨nh tr·∫°ng</th>
            <th>Ghi ch√∫</th>
            <th>H√†nh ƒë·ªông</th>
          </tr>
        </thead>
        <tbody>
          {filteredList.length === 0 ? (
            <tr>
              <td colSpan="12" style={{ textAlign: 'center', padding: '20px' }}>
                üéâ Kh√¥ng c√≥ sinh vi√™n c·∫ßn x·ª≠ l√Ω
              </td>
            </tr>
          ) : filteredList.map((sv, idx) => {
            // t√¨m link ban ƒë·∫ßu & k·∫øt th√∫c
            const banDau = banDauList.find(b => b.mssv===sv.mssv && b.maDotThucTap===sv.maDotThucTap)?.hoSoThucTapBanDau;
            const ketThuc = ketThucList.find(k => k.mssv===sv.mssv && k.maDotThucTap===sv.maDotThucTap)?.hoSoThucTapKetThuc;
            return (
              <tr key={idx}>
                <td>{sv.mssv}</td>
                <td>{sv.hoSinhVien} {sv.tenSinhVien}</td>
                <td>{sv.tenDotThucTap}</td>
                <td>
                  {new Date(sv.ngayBatDau).toLocaleDateString()} -{' '}
                  {new Date(sv.ngayKetThuc).toLocaleDateString()}
                </td>
                <td>{sv.lanThucTap}</td>
                <td>{sv.tenDonViThucTap}</td>
                <td>{sv.hoTenGiaoVien}</td>
                <td>{hienThiHoSo(banDau)}</td>
                <td>{hienThiHoSo(ketThuc)}</td>
                <td>{sv.tenTinhTrang || 'Ch∆∞a c·∫≠p nh·∫≠t'}</td>
                <td>
                  {!isHoSoHopLe(sv.hoSoThucTap)
                    ? <button onClick={()=>handleGuiYeuCauNop(sv)}>üì® Y√™u c·∫ßu n·ªôp</button>
                    : sv.ghiChu || '...'
                  }
                </td>
                <td>
                  <button onClick={()=>handleXacNhan(sv)}>‚úÖ X√°c nh·∫≠n</button>
                </td>
              </tr>
            );
          })}
        </tbody>
      </table>
    </div>
  );
};

export default DanhSachSVDangKy;
